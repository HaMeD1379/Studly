import {
  Anchor,
  Box,
  Button,
  Checkbox,
  Container,
  Group,
  Paper,
  PasswordInput,
  Text,
  TextInput,
  Title,
} from '@mantine/core';
import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { displayNotifications } from '~/utilities/notifications/displayNotifications';
import { equalPasswords, validateEmail } from '~/utilities/validation';

export function SignUpForm() {
  const navigate = useNavigate();

  const [password_1, setPassword_1] = useState('');
  const [password_2, setPassword_2] = useState('');
  const [email, setEmail] = useState('');
  const [name, setName] = useState('');
  const [error, setError] = useState('');

  //The logic for updating the color state of the password requirement text was generated by chatGPT
  const passwordLen = 8;
  const checkRules = (value: string) => ({
    hasDigit: /\d/.test(value),
    hasLowercase: /[a-z]/.test(value),
    hasSpecial: /[@#$%^&*()\-_+=]/.test(value),
    hasUppercase: /[A-Z]/.test(value),
    matchesLen: value.length > passwordLen,
  });
  const rules = checkRules(password_1);

  const handleClick = async (e: React.FormEvent) => {
    e.preventDefault();

    try {
      if (
        validateEmail(email) &&
        equalPasswords(password_1, password_2) &&
        name
      ) {
        displayNotifications(
          'Account Created Successfully',
          'Begin Your Gamified Learning experience now',
          'green',
        );
        navigate('/study');
      }
    } catch (err: unknown) {
      let message = 'An unknown error occurred.';

      if (err instanceof Error) {
        message = err.message;
      } else if (typeof err === 'object' && err !== null && 'message' in err) {
        message = String((err as { message?: unknown }).message);
      }

      if (message.includes('User already registered')) {
        displayNotifications(
          'Error',
          'An account with this email already exists.',
          'red',
        );
      } else {
        displayNotifications('Error', message, 'red');
      }

      setError(message);
      console.log(error);
    }
  };
  return (
    <Box
      style={{
        alignItems: 'center',
        backgroundColor: '#f0f0f0',
        display: 'flex',
        justifyContent: 'center',
        margin: '0',
        minHeight: 'center',
        padding: '20px',
      }}
    >
      <Container className='classes.container' my={40} size={420}>
        <Paper mt={30} p={22} radius='lg' shadow='xl' withBorder>
          <Text c={rules.matchesLen ? 'green' : 'red'}>
            • Password must be at least one 8 characters long
          </Text>
          <Text c={rules.hasLowercase ? 'green' : 'red'}>
            • Password must contain at least one lowercase letter
          </Text>
          <Text c={rules.hasUppercase ? 'green' : 'red'}>
            • Password must contain at least one uppercase letter
          </Text>
          <Text c={rules.hasDigit ? 'green' : 'red'}>
            • Password must contain at least one digit (0-9)
          </Text>
          <Text c={rules.hasSpecial ? 'green' : 'red'}>
            • Password must contain at least one special character (@, #, $, %,
            ^, &, *, (, ), -, _, +, =)
          </Text>
        </Paper>
        <Paper mt={30} p={22} radius='md' shadow='sm' withBorder>
          <Title ff='Inter, sans-serif' ta='center'>
            Join Studly
          </Title>
          <Text
            c='gray'
            style={{
              fontSize: 'var(--mantine-font-size-xs)',
              marginTop: '5px',
              textAlign: 'center',
            }}
          >
            Create your account and start your gamified learning journey
          </Text>
          <form onSubmit={handleClick}>
            <TextInput
              label='Full Name'
              onChange={(e) => setName(e.target.value)}
              placeholder='Enter your full name'
              radius='md'
              required
            />
            <TextInput
              label='Email'
              onChange={(e) => setEmail(e.target.value)}
              placeholder='yourname@gmail.com'
              radius='md'
              required
            />
            <PasswordInput
              label='Create Password'
              mt='md'
              onChange={(e) => setPassword_1(e.target.value)}
              placeholder='Create a password'
              radius='md'
              required
            />
            <PasswordInput
              label='Confirm Password'
              mt='md'
              onChange={(e) => setPassword_2(e.target.value)}
              placeholder='Confirm your password'
              radius='md'
              required
            />
            <Group justify='space-between' mt='lg'>
              <Checkbox
                fw={700}
                label='I agree to the Terms and Conditions'
                required
              />
            </Group>
            <Button
              fullWidth
              mt='xl'
              radius='md'
              styles={{
                root: {
                  '&:hover': { backgroundColor: '#222' },
                  backgroundColor: 'black',
                  color: 'white',
                  fontWeight: 500,
                },
              }}
              type='submit'
            >
              Sign Up
            </Button>
          </form>
          <br />
          <Text
            style={{
              color: 'var(--mantine-color-dimmed)',
              fontSize: 'var(--mantine-font-size-xs)',
              marginTop: '5px',
              textAlign: 'center',
            }}
          >
            Already have an account?{' '}
            <Anchor
              onClick={() => navigate('/')}
              styles={{
                root: {
                  color: 'black',
                  fontWeight: 400,
                },
              }}
            >
              Sign in
            </Anchor>
          </Text>
        </Paper>
      </Container>
    </Box>
  );
}
