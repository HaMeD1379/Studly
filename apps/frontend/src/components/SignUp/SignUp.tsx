import {
	Anchor,
	Button,
	Checkbox,
	Container,
	Group,
	Paper,
	PasswordInput,
	Text,
	TextInput,
	Title,
} from '@mantine/core';
import { useNavigate } from 'react-router-dom';
import { validateEmail, equalPasswords } from '~/utilities/validation';
import { displayNotifications } from '~/utilities/notifications/displayNotifications';
import { useState } from 'react';
import { Box } from '@mantine/core';

export function SignUpForm() {
	const navigate = useNavigate();

	const [password_1, setPassword_1] = useState('');
	const [password_2, setPassword_2] = useState('');
	const [email, setEmail] = useState('');
	const [name, setName] = useState('');
	const [error, setError] = useState('');

	//The logic for updating the color state of the password requirement text was generated by chatGPT
	const passwordLen = 8;
	const checkRules = (value: string) => ({
		matchesLen: value.length > passwordLen,
		hasLowercase: /[a-z]/.test(value),
		hasUppercase: /[A-Z]/.test(value),
		hasDigit: /\d/.test(value),
		hasSpecial: /[@#$%^&*()\-_+=]/.test(value),
	});
	const rules = checkRules(password_1);

	const handleClick = async (e: React.FormEvent) => {
		e.preventDefault();

		try {
			if (
				validateEmail(email) &&
				equalPasswords(password_1, password_2) &&
				name
			) {
				displayNotifications(
					'Account Created Successfully',
					'Begin Your Gamified Learning experience now',
					'green',
				);
				navigate('/study');
			}
		} catch (err: unknown) {
			let message = 'An unknown error occurred.';

			if (err instanceof Error) {
				message = err.message;
			} else if (typeof err === 'object' && err !== null && 'message' in err) {
				message = String((err as { message?: unknown }).message);
			}

			if (message.includes('User already registered')) {
				displayNotifications(
					'Error',
					'An account with this email already exists.',
					'red',
				);
			} else {
				displayNotifications('Error', message, 'red');
			}

			setError(message);
			console.log(error);
		}
	};
	return (
		<Box
			style={{
				backgroundColor: '#f0f0f0',
				padding: '20px',
				display: 'flex',
				justifyContent: 'center',
				alignItems: 'center',
				minHeight: 'center',
				margin: '0',
			}}
		>
			<Container size={420} my={40} className="classes.container">
				<Paper withBorder shadow="xl" p={22} mt={30} radius="lg">
					<Text c={rules.matchesLen ? 'green' : 'red'}>
						• Password must be at least one 8 characters long
					</Text>
					<Text c={rules.hasLowercase ? 'green' : 'red'}>
						• Password must contain at least one lowercase letter
					</Text>
					<Text c={rules.hasUppercase ? 'green' : 'red'}>
						• Password must contain at least one uppercase letter
					</Text>
					<Text c={rules.hasDigit ? 'green' : 'red'}>
						• Password must contain at least one digit (0-9)
					</Text>
					<Text c={rules.hasSpecial ? 'green' : 'red'}>
						• Password must contain at least one special character (@, #, $, %,
						^, &, *, (, ), -, _, +, =)
					</Text>
				</Paper>
				<Paper withBorder shadow="sm" p={22} mt={30} radius="md">
					<Title ta="center" ff="Inter, sans-serif">
						Join Studly
					</Title>
					<Text
						c="gray"
						style={{
							fontSize: 'var(--mantine-font-size-xs)',
							textAlign: 'center',
							marginTop: '5px',
						}}
					>
						Create your account and start your gamified learning journey
					</Text>
					<form onSubmit={handleClick}>
						<TextInput
							label="Full Name"
							placeholder="Enter your full name"
							required
							radius="md"
							onChange={(e) => setName(e.target.value)}
						/>
						<TextInput
							onChange={(e) => setEmail(e.target.value)}
							label="Email"
							placeholder="yourname@gmail.com"
							required
							radius="md"
						/>
						<PasswordInput
							onChange={(e) => setPassword_1(e.target.value)}
							label="Create Password"
							placeholder="Create a password"
							required
							mt="md"
							radius="md"
						/>
						<PasswordInput
							onChange={(e) => setPassword_2(e.target.value)}
							label="Confirm Password"
							placeholder="Confirm your password"
							required
							mt="md"
							radius="md"
						/>
						<Group justify="space-between" mt="lg">
							<Checkbox
								label="I agree to the Terms and Conditions"
								fw={700}
								required
							/>
						</Group>
						<Button
							fullWidth
							mt="xl"
							radius="md"
							styles={{
								root: {
									backgroundColor: 'black',
									color: 'white',
									fontWeight: 500,
									'&:hover': { backgroundColor: '#222' },
								},
							}}
							type="submit"
						>
							Sign Up
						</Button>
					</form>
					<br />
					<Text
						style={{
							color: 'var(--mantine-color-dimmed)',
							fontSize: 'var(--mantine-font-size-xs)',
							textAlign: 'center',
							marginTop: '5px',
						}}
					>
						Already have an account?{' '}
						<Anchor
							styles={{
								root: {
									color: 'black',
									fontWeight: 400,
								},
							}}
							onClick={() => navigate('/')}
						>
							Sign in
						</Anchor>
					</Text>
				</Paper>
			</Container>
		</Box>
	);
}
